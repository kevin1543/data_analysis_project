x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2] })
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
lapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])[[1]]})
tapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])[[1]]})
sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])[[1]]})
sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
data_set[2,2]
table(data_set$activity)
sapply(data_set$activity, function(x) {tolower((activity_labels[activity_labels$activity_number == x,2]))})
lapply(data_set$activity, function(x) {tolower((activity_labels[activity_labels$activity_number == x,2]))})
lapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
table(data_set$subject)
library(dplyr)
sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2] })
library(dplyr)
summarise(group_by(data_set,subject,activity),feature_names, mean)
summarise(group_by(data_set,subject,activity),across(feature_names, mean))
summarise(group_by(data_set,subject,activity),across(-subject:activity, mean))
summarise(group_by(data_set,subject,activity),across(-(subject:activity), mean))
data_set$subject
summarise(group_by(data_set,subject,activity),mean)
summarise(group_by(data_set,subject,activity),3:ncol(data_set),mean)
?summarise
summarise(group_by(data_set,subject,activity),mean = mean(tBodyAcc-mean()-X)
)
names(data_set)
summarise(group_by(data_set,subject,activity),mean = mean("tBodyAcc-mean()-X"))
summarise(group_by(data_set,subject,activity),mean = mean("tBodyAcc-mean()-X", na.rm = T))
mean(data_set$`tBodyAcc-mean()-X`)
vars("PM25", "Ozone", "CO2")
summarize(group_by(data_set,subject,activity),3:ncol(data_set),mean)
?summarize
summarize(group_by(data_set,subject,activity),mean = mean("tBodyAcc-mean()-X"))
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2] })
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
#colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
#colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$
subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
summarize(group_by(data_set,subject,activity),mean = mean(V1))
summarize(group_by(data_set,subject,activity),across(V1:V79, mean))
summarize(group_by(data_set,subject,activity),across(V1:V78, mean))
names(data_set)
summarize(group_by(data_set,subject,activity),across(V1:V552, mean))
table_2 <- summarize(group_by(data_set,subject,activity),across(V1:V552, mean))
table_2
table(table_2)
typeof(table_2)
table_2[1]
table_2[2]
table_2[3]
summarise(group_by(data_set,subject,activity),across(V1:V552, mean))
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2] })
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
#colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
#colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
#data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
table_2 <- summarize(group_by(data_set,subject,activity),across(V1:V552, mean))
table_2
data.frame(table_2)
head(data.frame(table_2))
tail(data.frame(table_2))
feature_names
gsub("()","", feature_names)
gsub("()","", feature_names[1])
gsub("(","", feature_names[1])
gsub("//(","", feature_names[1])
gsub("/(","", feature_names[1])
gsub("(","", feature_names[1])
gsub("(","", feature_names[1])
)
print("()")
gsub("()","", feature_names[1])
gsub(")","", feature_names[1])
gsub("(","", feature_names[1])
gsub("-","", feature_names[1])
gsub("-","", feature_names)
gsub("-","_", feature_names)
gsub(")(","_", feature_names)
gsub(c(")","("),"_", feature_names)
gsub(c(")","-"),"_", feature_names)
gsub("\\s*\\([^\\)]+\\)","",feature_names)
gsub("[()]","", feature_names[1])
gsub("[()]","", feature_names)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
feature_names <- gsub("[()]","", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
#colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
#colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
#data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
table_2 <- summarize(group_by(data_set,subject,activity),across(V1:V552, mean))
?across
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
feature_names <- gsub("[()]","", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
#data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
table_2 <- summarize(group_by(data_set,subject,activity),across(feature_names, mean))
table_2 <- summarize(group_by(data_set,subject,activity),across(3:ncol(data_set), mean))
table_2 <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
table_2
average_table_by_groups <- data.frame(table_2)
View(average_table_by_groups)
View(average_table_by_groups)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names
feature_names <- gsub("[()]","", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names
feature_names <- gsub("[()]","", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
write.csv(data_set, "data_set.csv")
write.csv(data_set, "data_set.csv", row.names = FALSE)
write.csv(data_set, "data_set.csv", row.names = FALSE)
View(subject_train)
View(subject_train)
subject_train[1,7584]
subject_train[7584,1]
View(subject_test)
View(subject_test)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names
feature_names <- gsub("[()]","", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
#save tables
write.csv(data_set, "data_set.csv", row.names = FALSE)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names
feature_names <- gsub("[()]","", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
#save tables
write.csv(data_set, "data_set.csv", row.names = FALSE)
write.csv(average_table_by_groups, "average_table_by_groups.csv", row.names = FALSE)
y_train[3:]
y_train[3:4]
y_train[3:4,]
y_train[3:,]
c(1,c(1,2))
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names and replace - by _
feature_names <- gsub("[()]","", feature_names)
feature_names <- gsub("-","_", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
colnames(average_table_by_groups) <- c("subject", "activity", sapply(feature_names, function(x) paste0("mean_of_", x)))
#save tables
write.csv(data_set, "data_set.csv", row.names = FALSE)
View(average_table_by_groups)
View(average_table_by_groups)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names and replace - by _
feature_names <- gsub("[()]","", feature_names)
feature_names <- gsub("-","_", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
colnames(average_table_by_groups) <- c("subject", "activity", sapply(feature_names, function(x) paste0("mean_of_", x)))
#save tables
write.csv(data_set, "data_set.csv", row.names = FALSE)
write.csv(average_table_by_groups, "average_table_by_groups.csv", row.names = FALSE)
feature_names
DATA DICTIONARY – HUMAN ACTIVITY RECOGNITION USING SMARTPHONES
## fBodyBodyGyroJerkMag_std
- Standard deviation of the frequency value of the magnitude of the body gyroscope jerk signal.
?read.table
?grep
?gsub
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names and replace - by _
feature_names <- gsub("[()]","", feature_names)
feature_names <- gsub("-","_", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
colnames(average_table_by_groups) <- c("subject", "activity", sapply(feature_names, function(x) paste0("mean_of_", x)))
#save tables
write.csv(data_set, "data_set.txt", row.names = FALSE)
write.csv(average_table_by_groups, "average_table_by_groups.csv", row.names = FALSE)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names and replace - by _
feature_names <- gsub("[()]","", feature_names)
feature_names <- gsub("-","_", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
colnames(average_table_by_groups) <- c("subject", "activity", sapply(feature_names, function(x) paste0("mean_of_", x)))
#save tables
write.csv(data_set, "data_set.txt", row.names = FALSE)
write.csv(average_table_by_groups, "average_table_by_groups.txt", row.names = FALSE)
library(stringr)
# get features / mean and standard deviation indices
features <- read.table("features.txt", col.names = c("feature_number","feature"), header = F)
mean_and_std_indices <- grep("mean()|std()|meanFreq()", features$feature)
feature_names <- sapply(mean_and_std_indices, function(x) {features[features$feature_number == x, 2]})
# remove parenthesis from column names and replace - by _
feature_names <- gsub("[()]","", feature_names)
feature_names <- gsub("-","_", feature_names)
# get test set with appropriate column names
subject_test <- read.table("test/subject_test.txt", col.names = c("subject"))
y_test <- read.table("test/y_test.txt", col.names = c("activity"))
x_test <- read.table("test/X_test.txt")[,mean_and_std_indices]
colnames(x_test) <- feature_names
data_test <- cbind(subject_test, y_test, x_test)
# get train set with appropriate column names
subject_train <- read.table("train/subject_train.txt", col.names = c("subject"))
x_train <- read.table("train/X_train.txt")[,mean_and_std_indices]
y_train <- read.table("train/y_train.txt", col.names = c("activity"))
colnames(x_train) <- feature_names
data_train <- cbind(subject_train, y_train, x_train)
# merge data
data_set <- rbind(data_train, data_test)
# rename activity using activity labels
activity_labels <- read.table("activity_labels.txt", col.names = c("activity_number", "activity_label"))
data_set$activity <- sapply(data_set$activity, function(x) {(activity_labels[activity_labels$activity_number == x,2])})
# rename the subject varaibles to be more clear
data_set$subject <- sapply(data_set$subject, function(x) paste0("volunteer_",x))
library(dplyr)
summriezed_table <- summarize(group_by(data_set,subject,activity),across(1:(ncol(data_set)-2), mean))
average_table_by_groups <- data.frame(summriezed_table)
colnames(average_table_by_groups) <- c("subject", "activity", sapply(feature_names, function(x) paste0("mean_of_", x)))
#save tables
write.table(data_set, "data_set.txt", row.names = F)
write.table(average_table_by_groups, "average_table_by_groups.txt", row.names = F)
write.csv(data_set, "data_set.csv", row.names = FALSE)
write.csv(average_table_by_groups, "average_table_by_groups.csv", row.names = FALSE)
read.table("data_set.txt")
read.table("data_set.txt", header = T)
